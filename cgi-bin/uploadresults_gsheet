#!/usr/bin/env python3
import cgi, os
import cgitb; cgitb.enable()
form = cgi.FieldStorage()

#for gsheet
import pickle
import os.path
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
import sys
import os
import json
from gsheet_actions_newtemplate import *


def printForm(opU,opF):
    form_template_file=open ("templates/form.html", "r")
    form_template=form_template_file.read()
    print("Content-Type: text/html\n\n")

    options_Site=""
    for i in opU.keys() :
        options_Site+='<option value="%s">%s</option>' %(i,i)
        
    print(form_template.format(options_map=json.dumps(opU),options_Site=options_Site))


def receiveAndSaveToGoogleSheet(dict_ids, col_simulator_filenames, col_mvm_filenames, col_campaigns, service, SAMPLE_SPREADSHEET_ID, all_s, VERB=False):
    print("Content-Type: text/html\n\n")
    testID = form.getvalue("TestID")
    site = form.getvalue("Site")
    campaign = form.getvalue("Campaign")
    mvmonly = form.getvalue("mvmonly")
    file_simulator = form['file1']
    file_simulator_2 = form['file2']
    file_mvm = form['file3']
    #
    # i issue an error if the first two are different suffix apart
    #
    if (os.path.splitext(file_simulator.filename)[0] != os.path.splitext(file_simulator_2.filename)[0]):
        print ("ERROR! The two simulator files should have the same name apart from the suffix. I got ",file_simulator.filename, file_simulator_2.filename)
        sys.exit(3)
        filename_simulator_no_suffix = os.path.splitext(file_simulator.filename)[0]
#
# I have to refuse doing anything if sfirst and second are differen
#    if file_simulator.filename :
#        open('/dev/null', 'wb').write(file_simulator.file.read()) #FIXME: do something better than writing to dev null
#    if file_mvm.filename :
#        open('/dev/null', 'wb').write(file_mvm.file.read()) #FIXME: do something better than writing to dev null
#    if file_simulator_2xs.filename :
#        open('/dev/null', 'wb').write(file_simulator_2.file.read()) #FIXME: do something better than writing to dev null
    
    print("Upload was ok<br>")
    #
    # now I fix them in the gsheet
    #
    print("Filling the gsheet", '<br>')
    print ("SITE    = " , site, '<br>')
    print ("CAMPAIGN=    = " , campaign, '<br>')
    print ("Test ID = " ,testID , '<br>')
    print ("F_SIM = " , file_simulator.filename, '<br>')
    print ("F_SI2 = " ,file_simulator_2.filename , '<br>')
    print ("F_MVM = " ,file_mvm.filename , '<br>')
    print ("MVMONLY = " , mvmonly , '<br>')

#
# now prepare the JSON, startis from all
#

# simulator 1 and 2 ....
#    insert_single_cell(dict_ids[testID], col_simulator_filename,filename_simulator_no_suffix, service, SAMPLE_SPREADSHEET_ID )
# mvm
#    insert_single_cell(dict_ids[testID], col_mvm_filename,file_simulator.filename, service, SAMPLE_SPREADSHEET_ID )


def main():
    # The ID and range of a sample spreadsheet.
    SAMPLE_SPREADSHEET_ID = '1AQXgqCKNAuCCDGffi9QU_v_9tOP97qYQNyxx9L6pWRA'
    Suffix_SAMPLE_RANGE_NAME = '!A:AR'
    service  = initGsheet(SAMPLE_SPREADSHEET_ID)

    (dict_ids,col_simulator_filenames,col_mvm_filenames,col_campaigns, all_s) = getIDsFromMultipleSheets(SAMPLE_SPREADSHEET_ID,Suffix_SAMPLE_RANGE_NAME, service,False)

    (optionmap,opF,opU) = getIDsForm(dict_ids, False)


    if "submit" in form.keys():
        receiveAndSaveToGoogleSheet(dict_ids, col_simulator_filenames, col_mvm_filenames, col_campaigns, service, SAMPLE_SPREADSHEET_ID, all_s,False)
    else:
        printForm(opU,opF)

if __name__ == '__main__':
    main()

